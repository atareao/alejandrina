/*
 * JVerticalPanel.java
 *
 * Created on 8 de septiembre de 2007, 8:31
 */

package es.atareao.alejandria.gui;

import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;

/**
 *
 * @author  Propietario
 */
public class JVerticalPanel extends javax.swing.JPanel {
    AffineTransform at = new AffineTransform();

    /** Creates new form JVerticalPanel */
    public JVerticalPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Generado  ">//GEN-BEGIN:initComponents
    private void initComponents() {

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    public void setTrans() {
        at.rotate(Math.toRadians(-90));
    }
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        /*
        Graphics2D g2 = (Graphics2D)g;
        at.setToIdentity();
        setTrans();
        g2.transform(at);
        FontMetrics fm = g2.getFontMetrics();
        int x = fm.stringWidth(" ") ;
        int x1 = fm.stringWidth("");
        x = (getSize().height-x)/2;
        x1 = (getSize().height-x1)/2;
        g2.drawString(this.getText(),((getSize().height)),(getSize().width/2));
        */
        label_line(g,(getSize().width/2),(getSize().height),270,this.getText());
    }
    private void label_line(Graphics g, double x, double y, double theta, String label) {

         Graphics2D g2D = (Graphics2D)g;

        // Create a rotation transformation for the font.
        AffineTransform fontAT = new AffineTransform();

        // get the current font
        Font theFont = g2D.getFont();

        // Derive a new font using a rotatation transform
        fontAT.rotate(theta*java.lang.Math.PI/180);
        Font theDerivedFont = theFont.deriveFont(fontAT);

        // set the derived font in the Graphics2D context
        g2D.setFont(theDerivedFont);

        // Render a string using the derived font
        g2D.drawString(label, (int)x, (int)y);

        // put the original font back
        g2D.setFont(theFont);

        } 
    
    // Declaración de varibales -no modificar//GEN-BEGIN:variables
    // Fin de declaración de variables//GEN-END:variables
        private String _text="Vertical";    

    public String getText() {
        return _text;
    }

    public void setText(String text) {
        this._text = text;
    }
}
